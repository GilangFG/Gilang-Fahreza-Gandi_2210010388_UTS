import java.util.ArrayList; // Import kelas ArrayList untuk menggunakan list dinamis
import java.util.List; // Import interface List, biasanya digunakan untuk deklarasi tipe data list yang lebih fleksibel
import java.time.LocalDate; // Import LocalDate untuk menangani tanggal secara khusus (tanpa waktu)
import javax.swing.DefaultListModel; // Import DefaultListModel untuk menyimpan dan mengelola data yang ditampilkan dalam JList
import javax.swing.JList; // Import JList untuk menampilkan daftar data dalam GUI
import java.io.FileWriter; // Import FileWriter untuk menulis data ke file
import java.io.IOException; // Import IOException untuk menangani kesalahan saat berinteraksi dengan file (misalnya saat membaca/menulis)
import java.io.BufferedReader; // Import BufferedReader untuk membaca data dari file secara efisien
import java.io.FileReader; // Import FileReader untuk membaca file teks
import javax.swing.JFileChooser; // Import JFileChooser untuk memungkinkan pengguna memilih file melalui dialog
import java.io.BufferedWriter; // Import BufferedWriter untuk menulis data ke file dengan efisiensi lebih tinggi dibandingkan FileWriter
import javax.swing.JOptionPane; // Import JOptionPane untuk menampilkan dialog interaktif (misalnya untuk menampilkan pesan atau konfirmasi kepada pengguna)


/**
 *
 * @author LENOVO
 */
public class MainFrame extends javax.swing.JFrame {
// Daftar catatan harian
private ArrayList<Catatan> daftarCatatan = new ArrayList<Catatan>();

// Memperbarui model daftar catatan pada JList
private void updateDaftar() {
    DefaultListModel<String> model = new DefaultListModel<>();
    for (Catatan catatan : daftarCatatan) {
        model.addElement(catatan.toString());
    }
    ListDaftar.setModel(model); // Perbarui model JList
}
// Mengosongkan inputan judul dan isi catatan
private void clearInput() {
    TextFieldJudul.setText(""); // Kosongkan JTextField untuk judul
    TextAreaIsi.setText("");   // Kosongkan JTextArea untuk isi catatan
}
// Mengekspor data catatan ke file .txt
private void exportToTxt(String filename) {
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(filename))) {
        for (Catatan catatan : daftarCatatan) {
            writer.write("Judul: " + catatan.getJudul());
            writer.newLine();
            writer.write("Isi: " + catatan.getIsi());
            writer.newLine();
            writer.write("Tanggal: " + catatan.getTanggal());
            writer.newLine();
            writer.write("----------------------------");
            writer.newLine();
        }
        JOptionPane.showMessageDialog(this, "Data berhasil diekspor!");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengekspor data.");
        e.printStackTrace();
    }
}
// Mengimpor data catatan dari file .txt
private void importFromTxt(String filename) {
    try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
        String line;
        daftarCatatan.clear();
        while ((line = reader.readLine()) != null) {
            if (line.startsWith("Judul: ")) {
                String judul = line.substring(7);
                String isi = reader.readLine().substring(5);
                String tanggal = reader.readLine().substring(9);
                reader.readLine(); // Skip separator
                
                daftarCatatan.add(new Catatan(judul, isi, LocalDate.parse(tanggal)));
            }
        }
        updateDaftar();
        JOptionPane.showMessageDialog(this, "Data berhasil diimpor!");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengimpor data.");
        e.printStackTrace();
    }
}



    public MainFrame() {
        initComponents();

// Tambahkan ListSelectionListener ke JList
    ListDaftar.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
        public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            ListDaftarValueChanged(evt);
        }
    });        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaIsi = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListDaftar = new javax.swing.JList<>();
        ButtonTambah = new javax.swing.JButton();
        ButtonUbah = new javax.swing.JButton();
        ButtonHapus = new javax.swing.JButton();
        TextFieldJudul = new javax.swing.JTextField();
        ButtonExport = new javax.swing.JButton();
        ButtonImport = new javax.swing.JButton();
        ButtonKeluar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 0));

        TextAreaIsi.setColumns(20);
        TextAreaIsi.setRows(5);
        jScrollPane1.setViewportView(TextAreaIsi);

        ListDaftar.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListDaftarValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(ListDaftar);

        ButtonTambah.setBackground(new java.awt.Color(102, 204, 255));
        ButtonTambah.setText("Tambah");
        ButtonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTambahActionPerformed(evt);
            }
        });

        ButtonUbah.setBackground(new java.awt.Color(102, 204, 255));
        ButtonUbah.setText("Ubah");
        ButtonUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUbahActionPerformed(evt);
            }
        });

        ButtonHapus.setBackground(new java.awt.Color(102, 204, 255));
        ButtonHapus.setText("Hapus");
        ButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonHapusActionPerformed(evt);
            }
        });

        TextFieldJudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldJudulActionPerformed(evt);
            }
        });

        ButtonExport.setBackground(new java.awt.Color(102, 204, 255));
        ButtonExport.setText("Export");
        ButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExportActionPerformed(evt);
            }
        });

        ButtonImport.setBackground(new java.awt.Color(102, 204, 255));
        ButtonImport.setText("Import");
        ButtonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonImportActionPerformed(evt);
            }
        });

        ButtonKeluar.setBackground(new java.awt.Color(102, 204, 255));
        ButtonKeluar.setText("Keluar");
        ButtonKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonKeluarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setText("FG'S");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel2.setText("Diary Note");

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO\\Pictures\\RDR2 Netbeans.jpg")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ButtonTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(TextFieldJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(184, 184, 184))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ButtonHapus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                .addComponent(ButtonUbah, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(ButtonExport, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ButtonImport, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ButtonKeluar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 205, Short.MAX_VALUE)))))
                .addGap(44, 96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonTambah)
                            .addComponent(TextFieldJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonUbah)
                        .addGap(36, 36, 36)
                        .addComponent(ButtonHapus)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonImport)
                            .addComponent(ButtonExport))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(ButtonKeluar)))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextFieldJudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldJudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldJudulActionPerformed

    private void ButtonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTambahActionPerformed
     // Menambahkan catatan baru ke daftar
        String judul = TextFieldJudul.getText(); // Ambil teks dari TextFieldJudul
    String isi = TextAreaIsi.getText(); // Ambil teks dari TextAreaIsi
    LocalDate tanggal = LocalDate.now(); // Mendapatkan tanggal saat ini
    
    // Membuat objek Catatan baru
    Catatan baru = new Catatan(judul, isi, tanggal); // Menambahkan catatan baru ke daftar
    daftarCatatan.add(baru);

    updateDaftar(); // Memperbarui tampilan daftar catatan
    clearInput(); // Mengosongkan input judul dan isi
    }//GEN-LAST:event_ButtonTambahActionPerformed
    
    private void ButtonUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUbahActionPerformed
        // Mengubah catatan yang dipilih dari daftar
        int index = ListDaftar.getSelectedIndex(); // Mendapatkan indeks catatan yang dipilih
    if (index >= 0) {   // Pastikan ada catatan yang dipilih
        Catatan catatan = daftarCatatan.get(index); // Ambil catatan berdasarkan indeks
        catatan.setJudul(TextFieldJudul.getText()); // Ubah judul catatan
        catatan.setIsi(TextAreaIsi.getText()); // Ubah isi catatan

        updateDaftar(); // Memperbarui daftar catatan di JList
    }
    }//GEN-LAST:event_ButtonUbahActionPerformed

    private void ButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonHapusActionPerformed
        // Menghapus catatan yang dipilih dari daftar
        int index = ListDaftar.getSelectedIndex(); // Mendapatkan indeks catatan yang dipilih
    if (index >= 0) {   // Pastikan ada catatan yang dipilih
        daftarCatatan.remove(index); // Menghapus catatan dari daftar berdasarkan indeks
        updateDaftar(); // Memperbarui tampilan daftar catatan
    }
    }//GEN-LAST:event_ButtonHapusActionPerformed

    private void ListDaftarValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListDaftarValueChanged
        // Menampilkan data catatan yang dipilih pada TextField dan TextArea
    if (!evt.getValueIsAdjusting()) {
        int index = ListDaftar.getSelectedIndex();// Mendapatkan indeks catatan yang dipilih

        if (index >= 0) {   // Pastikan ada catatan yang dipilih
            // Ambil catatan yang dipilih dari daftar
            Catatan catatan = daftarCatatan.get(index); // Ambil catatan yang dipilih

            // Tampilkan data di JTextField dan JTextArea
            TextFieldJudul.setText(catatan.getJudul()); // Menampilkan judul pada TextField
            TextAreaIsi.setText(catatan.getIsi()); // Menampilkan isi pada TextArea
        }
    }
    }//GEN-LAST:event_ListDaftarValueChanged

    private void ButtonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExportActionPerformed
    // Menangani ekspor data catatan ke file .txt
    JFileChooser fileChooser = new JFileChooser(); // Membuka dialog untuk memilih lokasi file
    fileChooser.setDialogTitle("Pilih lokasi untuk menyimpan file"); // Judul dialog
    int result = fileChooser.showSaveDialog(this); // Menampilkan dialog penyimpanan

    if (result == JFileChooser.APPROVE_OPTION) { // Jika pengguna memilih lokasi dan file
        String filename = fileChooser.getSelectedFile().getAbsolutePath(); // Mendapatkan path file
        exportToTxt(filename); // Panggil metode untuk mengekspor
    }

    }//GEN-LAST:event_ButtonExportActionPerformed

    private void ButtonImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonImportActionPerformed
    // Menangani impor data catatan dari file .txt
    JFileChooser fileChooser = new JFileChooser(); // Membuka dialog untuk memilih file
    fileChooser.setDialogTitle("Pilih file untuk mengimpor"); // Judul dialog
    int result = fileChooser.showOpenDialog(this); // Menampilkan dialog buka file

    if (result == JFileChooser.APPROVE_OPTION) { // Jika pengguna memilih file
        String filename = fileChooser.getSelectedFile().getAbsolutePath(); // Mendapatkan path file
        importFromTxt(filename); // Panggil metode untuk mengimpor
    }
    }//GEN-LAST:event_ButtonImportActionPerformed

    private void ButtonKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonKeluarActionPerformed
    // Menangani aksi tombol keluar (exit)
    int confirm = JOptionPane.showConfirmDialog(this, 
            "Apakah Anda yakin ingin keluar?", "Konfirmasi Keluar",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE); // Menampilkan konfirmasi sebelum keluar
    
    if (confirm == JOptionPane.YES_OPTION) { // Jika pengguna memilih "Yes"
        System.exit(0);  // Menutup aplikasi
    }
    }//GEN-LAST:event_ButtonKeluarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonExport;
    private javax.swing.JButton ButtonHapus;
    private javax.swing.JButton ButtonImport;
    private javax.swing.JButton ButtonKeluar;
    private javax.swing.JButton ButtonTambah;
    private javax.swing.JButton ButtonUbah;
    private javax.swing.JList<String> ListDaftar;
    private javax.swing.JTextArea TextAreaIsi;
    private javax.swing.JTextField TextFieldJudul;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
